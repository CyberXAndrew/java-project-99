plugins {
	id 'application'
//	id 'checkstyle'
	id 'jacoco'
	id("io.freefair.lombok") version "8.4"
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.springframework.boot' version '3.2.3'
}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'

application { mainClass.set("hexlet.code.AppApplication") }

java {
	sourceCompatibility = '20'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'


	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // аннотации для сущности
	implementation 'org.springframework.boot:spring-boot-starter-validation' // аннотации валидации
	// ТЕСТЫ
	testImplementation(platform 'org.junit:junit-bom:5.10.0')
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// Понадобится когда мы начнем работать с аутентификацией
	testImplementation 'org.springframework.security:spring-security-test'
	// предоставляет функциональность для сравнения и проверки JSON-структур
	testImplementation("net.javacrumbs.json-unit:json-unit-assertj:3.2.2")
	testImplementation 'junit:junit:4.13.2' // assertTrue
	testImplementation 'org.assertj:assertj-core:3.25.3'
	implementation 'org.instancio:instancio-junit:3.3.0'
//	implementation 'net.datafaker:datafaker:2.1.0'
	implementation("net.datafaker:datafaker:2.0.2")

	implementation 'com.h2database:h2:2.2.224'
//	runtimeOnly("com.h2database:h2")

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}

tasks.jacocoTestReport { reports { xml.required.set(true) } }
